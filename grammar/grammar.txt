Program         ::= (NamedRegExpr)* (NewLine)* (State)? (NewLine)* Rules
NamedRegExpr    ::= Name "/" RegExpr "/" NewLine
State           ::= "%x" (Name)+ NewLine
Rules           ::= "%%" (NewLine)+ (Rule)+ "%%"
Rule            ::= (StartCondition)? "/" RegExpr "/"  Name (SwitchCondition)?
                    (Continue)? (Edit)? (NewLine)+
StartCondition  ::= "<" Name ">"
SwitchCondition ::= "BEGIN" "(" Name ")"

Lexems
Name ::= [A-Z][A-z0-9_]*
NewLine ::= \\n
Continue ::= continue
Edit ::= edit

RegExpr         ::= Union | SimpleExpr
Union           ::= SimpleExpr "|" RegExpr
SimpleExpr      ::= Concatenation | BasicExpr
Concatenation   ::= BasicExpr SimpleExpr
BasicExpr       ::= Element ("*"|"+"|"?")?
Element         ::= Group | Set | Escape | ValidIndependentCharacter
Group           ::= "(" RegExpr ")"
Escape          ::= "\" EscapeCharacter
Set             ::= "[" ("^")? FirstSetItem SetItems "]"
SetItems        ::= SetItem SetItems
SetItem         ::= Range | Escape | SetCharacter
Range           ::=  (Escape | RangeStartCharacter) "-" RangeEndCharacter


Lexems
ValidIndependentCharacter ::= [^()|/]
EscapeCharacter ::= .
SetCharacter ::= .[^]]*
RangeStartCharacter ::= .
RangeEndCharacter ::= .

